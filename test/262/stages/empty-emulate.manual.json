{
  "annexB": [
    {
      "pattern": "^test/annexB/",
      "flaky": true
    }
  ],
  "GeneratorParameterPattern": [
    "test/language/eval-code/direct/async-gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/async-gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/async-gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/async-gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/async-gen-func-expr-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/async-gen-func-expr-a-following-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/async-gen-func-expr-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/async-gen-func-expr-a-preceding-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/async-gen-meth-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/async-gen-meth-a-following-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/async-gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/async-gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/async-gen-named-func-expr-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/async-gen-named-func-expr-a-following-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/async-gen-named-func-expr-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/async-gen-named-func-expr-a-preceding-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/gen-func-decl-a-following-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/gen-func-decl-a-preceding-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/gen-func-expr-named-a-following-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/gen-func-expr-named-a-preceding-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/gen-func-expr-nameless-a-following-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/gen-func-expr-nameless-a-preceding-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/gen-meth-a-following-parameter-is-named-arguments-declare-arguments.js",
    "test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments-and-assign.js",
    "test/language/eval-code/direct/gen-meth-a-preceding-parameter-is-named-arguments-declare-arguments.js",
    "test/language/expressions/async-generator/dflt-params-abrupt.js",
    "test/language/expressions/async-generator/dflt-params-ref-later.js",
    "test/language/expressions/async-generator/dflt-params-ref-self.js",
    {
      "pattern": "^test/language/expressions/async-generator/dstr/",
      "flaky": true
    },
    "test/language/expressions/async-generator/eval-var-scope-syntax-err.js",
    "test/language/expressions/async-generator/named-dflt-params-abrupt.js",
    "test/language/expressions/async-generator/named-dflt-params-ref-later.js",
    "test/language/expressions/async-generator/named-dflt-params-ref-self.js",
    "test/language/expressions/async-generator/named-eval-var-scope-syntax-err.js",
    "test/language/expressions/class/async-gen-method/dflt-params-abrupt.js",
    "test/language/expressions/class/async-gen-method/dflt-params-ref-later.js",
    "test/language/expressions/class/async-gen-method/dflt-params-ref-self.js",
    "test/language/expressions/class/async-gen-method-static/dflt-params-abrupt.js",
    "test/language/expressions/class/async-gen-method-static/dflt-params-ref-later.js",
    "test/language/expressions/class/async-gen-method-static/dflt-params-ref-self.js",
    { "pattern": "^test/language/expressions/class/dstr/", "flaky": true },
    "test/language/expressions/class/gen-method/dflt-params-abrupt.js",
    "test/language/expressions/class/gen-method/dflt-params-ref-later.js",
    "test/language/expressions/class/gen-method/dflt-params-ref-self.js",
    "test/language/expressions/class/gen-method-static/dflt-params-abrupt.js",
    "test/language/expressions/class/gen-method-static/dflt-params-ref-later.js",
    "test/language/expressions/class/gen-method-static/dflt-params-ref-self.js",
    "test/language/expressions/generators/dflt-params-abrupt.js",
    "test/language/expressions/generators/dflt-params-ref-later.js",
    "test/language/expressions/generators/dflt-params-ref-self.js",
    { "pattern": "^test/language/expressions/generators/dstr/", "flaky": true },
    "test/language/expressions/generators/eval-var-scope-syntax-err.js",
    { "pattern": "^test/language/expressions/object/dstr/", "flaky": true },
    "test/language/expressions/object/method-definition/async-gen-meth-dflt-params-abrupt.js",
    "test/language/expressions/object/method-definition/async-gen-meth-dflt-params-ref-later.js",
    "test/language/expressions/object/method-definition/async-gen-meth-dflt-params-ref-self.js",
    "test/language/expressions/object/method-definition/async-gen-meth-eval-var-scope-syntax-err.js",
    "test/language/expressions/object/method-definition/gen-meth-dflt-params-abrupt.js",
    "test/language/expressions/object/method-definition/gen-meth-dflt-params-ref-later.js",
    "test/language/expressions/object/method-definition/gen-meth-dflt-params-ref-self.js",
    "test/language/expressions/object/method-definition/gen-meth-eval-var-scope-syntax-err.js",
    "test/language/statements/async-generator/dflt-params-abrupt.js",
    "test/language/statements/async-generator/dflt-params-ref-later.js",
    "test/language/statements/async-generator/dflt-params-ref-self.js",
    {
      "pattern": "^test/language/statements/async-generator/dstr",
      "flaky": true
    },
    "test/language/statements/async-generator/eval-var-scope-syntax-err.js",
    "test/language/statements/class/async-gen-method/dflt-params-abrupt.js",
    "test/language/statements/class/async-gen-method/dflt-params-ref-later.js",
    "test/language/statements/class/async-gen-method/dflt-params-ref-self.js",
    "test/language/statements/class/async-gen-method-static/dflt-params-abrupt.js",
    "test/language/statements/class/async-gen-method-static/dflt-params-ref-later.js",
    "test/language/statements/class/async-gen-method-static/dflt-params-ref-self.js",
    { "pattern": "^test/language/statements/class/dstr/", "flaky": true },
    "test/language/statements/class/gen-method/dflt-params-abrupt.js",
    "test/language/statements/class/gen-method/dflt-params-ref-later.js",
    "test/language/statements/class/gen-method/dflt-params-ref-self.js",
    "test/language/statements/class/gen-method-static/dflt-params-abrupt.js",
    "test/language/statements/class/gen-method-static/dflt-params-ref-later.js",
    "test/language/statements/class/gen-method-static/dflt-params-ref-self.js",
    "test/language/statements/generators/dflt-params-abrupt.js",
    "test/language/statements/generators/dflt-params-ref-later.js",
    "test/language/statements/generators/dflt-params-ref-self.js",
    { "pattern": "^test/language/statements/generators/dstr/", "flaky": true },
    "test/language/statements/generators/eval-var-scope-syntax-err.js"
  ],
  "Checking constructor result is done at return site and becomes catchable": [
    "test/language/statements/class/subclass/derived-class-return-override-catch-super-arrow.js",
    "test/language/statements/class/subclass/derived-class-return-override-catch-super.js",
    "test/language/statements/class/subclass/derived-class-return-override-catch.js",
    "test/language/statements/class/subclass/derived-class-return-override-for-of.js"
  ],
  "Check for super class to be constructor is a heuristic based on the presence of prototype": [
    "test/language/statements/class/subclass/superclass-arrow-function.js",
    "test/language/statements/class/subclass/superclass-async-function.js",
    "test/language/statements/class/subclass/superclass-async-generator-function.js",
    "test/language/statements/class/subclass/superclass-generator-function.js"
  ],
  "methods have a non-configurable prototype property": [
    "test/built-ins/Function/prototype/Symbol.hasInstance/this-val-poisoned-prototype.js",
    "test/language/expressions/object/method-definition/name-prototype-prop.js",
    "test/language/statements/class/definition/accessors.js",
    "test/language/statements/class/definition/getters-prop-desc.js",
    "test/language/statements/class/definition/methods.js",
    "test/language/statements/class/definition/numeric-property-names.js",
    "test/language/statements/class/definition/setters-prop-desc.js"
  ],
  "ambient intrinsic do not consider realm": [
    "test/built-ins/Function/prototype/bind/proto-from-ctor-realm.js",
    "test/built-ins/Proxy/construct/trap-is-undefined-proto-from-newtarget-realm.js",
    "test/language/expressions/super/realm.js"
  ],
  "sloppy arguments is not a two-way binding with parameters": [
    "test/built-ins/Object/defineProperty/15.2.3.6-4-292-1.js",
    "test/built-ins/Object/defineProperty/15.2.3.6-4-293-2.js",
    "test/built-ins/Object/defineProperty/15.2.3.6-4-293-3.js",
    "test/built-ins/Object/defineProperty/15.2.3.6-4-294-1.js",
    "test/built-ins/Object/defineProperty/15.2.3.6-4-295-1.js",
    "test/built-ins/Object/defineProperty/15.2.3.6-4-296-1.js",
    "test/language/arguments-object/10.6-10-c-ii-1.js",
    "test/language/arguments-object/10.6-10-c-ii-2.js",
    "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-2.js",
    "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-3.js",
    "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-4.js",
    "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-delete-2.js",
    "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-delete-3.js",
    "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-delete-4.js",
    "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-3.js",
    "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-4.js",
    "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-nonwritable-5.js",
    "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-strict-delete-2.js",
    "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-strict-delete-3.js",
    "test/language/arguments-object/mapped/mapped-arguments-nonconfigurable-strict-delete-4.js",
    "test/language/arguments-object/mapped/nonconfigurable-descriptors-define-failure.js",
    "test/language/arguments-object/mapped/nonconfigurable-descriptors-set-value-by-arguments.js",
    "test/language/arguments-object/mapped/nonconfigurable-descriptors-set-value-with-define-property.js",
    "test/language/arguments-object/mapped/nonconfigurable-descriptors-with-param-assign.js",
    "test/language/arguments-object/mapped/nonconfigurable-nonenumerable-nonwritable-descriptors-set-by-arguments.js",
    "test/language/arguments-object/mapped/nonconfigurable-nonenumerable-nonwritable-descriptors-set-by-param.js",
    "test/language/arguments-object/mapped/nonconfigurable-nonwritable-descriptors-set-by-arguments.js",
    "test/language/arguments-object/mapped/nonconfigurable-nonwritable-descriptors-set-by-param.js",
    "test/language/arguments-object/mapped/writable-enumerable-configurable-descriptor.js",
    "test/language/expressions/yield/formal-parameters-after-reassignment-non-strict.js",
    "test/language/statements/for-of/arguments-mapped-aliasing.js"
  ],
  "arguments/caller properties of sloppy function remain null": [
    "test/language/arguments-object/10.6-13-a-2.js",
    "test/language/arguments-object/10.6-13-a-3.js"
  ],
  "Function.prototype.toString": [
    {
      "exact": "test/built-ins/RegExp/prototype/exec/S15.10.6.2_A1_T9.js",
      "flaky": true
    },
    {
      "exact": "test/language/expressions/addition/S11.6.1_A3.2_T1.2.js",
      "flaky": true
    },
    {
      "exact": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/expressions/greater-than/S11.8.2_A3.2_T1.2.js",
      "flaky": true
    },
    {
      "exact": "test/language/expressions/greater-than-or-equal/S11.8.4_A3.2_T1.2.js",
      "flaky": true
    },
    {
      "exact": "test/language/expressions/less-than/S11.8.1_A3.2_T1.2.js",
      "flaky": true
    },
    {
      "exact": "test/language/expressions/less-than-or-equal/S11.8.3_A3.2_T1.2.js",
      "flaky": true
    },
    {
      "exact": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-arrow-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-async-arrow-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-arrow-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-async-arrow-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/statements/class/cpn-class-decl-computed-property-name-from-arrow-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/statements/class/cpn-class-decl-computed-property-name-from-async-arrow-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/statements/class/cpn-class-decl-computed-property-name-from-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-function-expression.js",
      "flaky": true
    },
    {
      "exact": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-function-expression.js",
      "flaky": true
    }
  ],
  "Deadzone is not enforced from outside the module (only relevant in presence of cycle)": [
    "test/language/module-code/instn-iee-bndng-cls.js",
    "test/language/module-code/instn-iee-bndng-const.js",
    "test/language/module-code/instn-iee-bndng-let.js",
    "test/language/module-code/instn-named-bndng-cls.js",
    "test/language/module-code/instn-named-bndng-const.js",
    "test/language/module-code/instn-named-bndng-dflt-cls.js",
    "test/language/module-code/instn-named-bndng-dflt-fun-anon.js",
    "test/language/module-code/instn-named-bndng-dflt-gen-anon.js",
    "test/language/module-code/instn-named-bndng-dflt-named.js",
    "test/language/module-code/instn-named-bndng-dflt-star.js",
    "test/language/module-code/instn-named-bndng-let.js",
    "test/language/module-code/namespace/internals/delete-exported-uninit.js",
    "test/language/module-code/namespace/internals/enumerate-binding-uninit.js",
    "test/language/module-code/namespace/internals/get-own-property-str-found-uninit.js",
    "test/language/module-code/namespace/internals/get-str-found-uninit.js",
    "test/language/module-code/namespace/internals/object-hasOwnProperty-binding-uninit.js",
    "test/language/module-code/namespace/internals/object-keys-binding-uninit.js",
    "test/language/module-code/namespace/internals/object-propertyIsEnumerable-binding-uninit.js",
    "test/language/module-code/top-level-await/module-self-import-async-resolution-ticks.js"
  ],
  "Deadzone is is lifted too late in presence of module cycle": [
    "test/language/module-code/verify-dfs.js"
  ],
  "Not calling iterable.return on abrupt completion in array pattern": [
    "test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close-err.js",
    "test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close-null.js",
    "test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close.js",
    "test/language/expressions/assignment/dstr/array-elem-iter-thrw-close-err.js",
    "test/language/expressions/assignment/dstr/array-elem-iter-thrw-close.js",
    "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close-err.js",
    "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close-null.js",
    "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close.js",
    "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-thrw-close-err.js",
    "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-thrw-close.js",
    "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close-err.js",
    "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close-null.js",
    "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close.js",
    "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-thrw-close-err.js",
    "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-thrw-close.js",
    "test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close-err.js",
    "test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close-null.js",
    "test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close.js",
    "test/language/expressions/assignment/dstr/array-rest-iter-thrw-close-err.js",
    "test/language/expressions/assignment/dstr/array-rest-iter-thrw-close.js",
    "test/language/expressions/assignment/dstr/array-rest-lref-err.js",
    "test/language/statements/for-of/dstr/array-elem-iter-rtrn-close-err.js",
    "test/language/statements/for-of/dstr/array-elem-iter-rtrn-close-null.js",
    "test/language/statements/for-of/dstr/array-elem-iter-rtrn-close.js",
    "test/language/statements/for-of/dstr/array-elem-iter-thrw-close-err.js",
    "test/language/statements/for-of/dstr/array-elem-iter-thrw-close.js",
    "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close-err.js",
    "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close-null.js",
    "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close.js",
    "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-thrw-close-err.js",
    "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-thrw-close.js",
    "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close-err.js",
    "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close-null.js",
    "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close.js",
    "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-thrw-close-err.js",
    "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-thrw-close.js",
    "test/language/statements/for-of/dstr/array-rest-iter-rtrn-close-err.js",
    "test/language/statements/for-of/dstr/array-rest-iter-rtrn-close-null.js",
    "test/language/statements/for-of/dstr/array-rest-iter-rtrn-close.js",
    "test/language/statements/for-of/dstr/array-rest-iter-thrw-close-err.js",
    "test/language/statements/for-of/dstr/array-rest-iter-thrw-close.js",
    "test/language/statements/for-of/dstr/array-rest-lref-err.js"
  ],
  "this argument is undefined when directly invoking functions of with frame": [
    "test/language/expressions/call/with-base-obj.js"
  ],
  "Access super.prototype twice when creating a derived class": [
    "test/language/statements/class/definition/prototype-getter.js"
  ],
  "Right value are consistently evaluated first in pattern": [
    "test/language/statements/class/elements/privatefieldset-evaluation-order-1.js"
  ],
  "Classes access ambient 'this' at initialization which might throw inside derived classes *EDIT*: this might actually be the intended behavior >> new (class extends class {} { constructor() { new (class { foo = 123; })(); } })();": [],
  "When using enclave, from other programs, hidden variables are declared at the beginning": [],
  "When using enclave, from other programs, const hidden variables are writable": [],
  "Accessing Symbol.iterator twice in spread syntax": [],
  "Accessing step.done twice in for-of loop and array pattern": [],
  "Reflect.has triggers getters on global object contextified by vm -- https://github.com/nodejs/node/issues/52737": [
    "test/language/expressions/typeof/get-value.js",
    "test/language/module-code/import-assertions/eval-gtbndng-indirect-faux-assertion.js"
  ],
  "ENOBUF": [
    "test/built-ins/Array/from/not-a-constructor.js",
    "test/built-ins/Array/isArray/not-a-constructor.js"
  ]
}
