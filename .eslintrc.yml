env:
  es2020: true
parserOptions:
  ecmaVersion: 2020
  sourceType: module
rules:
  # Possible Errors
  no-console: warn
  no-debugger: warn
  no-dupe-keys: error
  no-empty: error
  no-extra-semi: error
  no-func-assign: error
  no-import-assign: error
  no-irregular-whitespace: error
  no-prototype-builtins: error
  no-sparse-arrays: error
  no-unreachable: error
  no-unreachable-loop: error
  no-unsafe-finally: error
  no-unsafe-negation: error
  valid-typeof:
    - error
    - requireStringLiterals: true
  # Best Practices
  consistent-return: error
  eqeqeq: error
  no-case-declarations: error
  no-constructor-return: error
  no-else-return: error
  no-eval: error
  no-fallthrough: error
  no-floating-decimal: error
  no-global-assign: error
  no-labels: error
  no-multi-spaces: error
  no-multi-str: error
  no-proto: error
  # Variable
  init-declarations: [error, always]
  no-undef: error
  no-unused-vars: error
  no-use-before-define: error
  # Stylistic Issues
  array-bracket-spacing: [error, never]
  array-element-newline: [error, consistent]
  block-spacing: [error, always]
  brace-style: [error, 1tbs]
  camelcase:
    - error
    - allow: [^global_]
  capitalized-comments: [error, always]
  comma-dangle: [error, always-multiline]
  comma-spacing:
    - error
    - before: false
      after: true
  comma-style: [error, last]
  computed-property-spacing: [error, never]
  eol-last: [error, always]
  func-call-spacing: [error, never]
  func-name-matching: [error, always]
  func-names: [error, always]
  func-style: [error, expression]
  function-call-argument-newline: [error, consistent]
  function-paren-newline: [error, never]
  implicit-arrow-linebreak: [error, beside]
  indent: [error, 2]
  key-spacing:
    - error
    - beforeColon: false
      afterColon: true
      mode: strict
  keyword-spacing:
    - error
    - before: true
      after: true
  linebreak-style: [error, unix]
  max-len:
    - warning
    - code: 80
      comments: 80
  max-statements-per-line:
    - error
    - max: 1
  new-cap: error
  new-parens: [error, always]
  no-array-constructor: error
  no-bitwise: error
  no-continue: error
  no-lonely-if: error
  no-mixed-operators: error
  # no-mixed-spaces-and-tabs >> indent
  no-multi-assign: error
  no-negated-condition: error
  # no-nested-ternary
  no-new-object: error
  no-plusplus: error
  no-restricted-syntax:
    - error
    - SwitchStatement
  # no-tabs >> indent
  # no-ternary
  no-trailing-spaces: error
  # no-underscore-dangle
  # no-unneeded-ternary
  no-whitespace-before-property: error
  # nonblock-statement-body-position >> TODO single-line statement should be desabled
  object-curly-newline:
    - error
    - multiline: true
      consistent: true
  object-curly-spacing: [error, always]
  # object-property-newline >> not sure what it is
  one-var: [error, never]
  # one-var-declaration-per-line >> multiple declarations disabled by one-var
  operator-assignment: [error, always]
  operator-linebreak: [error, after]
  # padded-blocks
  # padding-line-between-statements
  prefer-exponentiation-operator: [error, always]
  prefer-object-spread: [error, always]
  quote-props: [error, as-needed]
  quotes: [error, double]
  semi: [error, always]
  semi-spacing:
    - error
    - before: false
      after: false
  semi-style: [error, last]
  # sort-keys
  # sort-vars
  space-before-blocks: [error, always]
  space-before-function-paren: [error, always]
  space-in-parens: [error, never]
  space-infix-ops: [error]
  space-unary-ops:
    - error
    - words: true
      nonwords: false
  spaced-comment: [error, always]
  # switch-colon-spacing >> SwitchStatement disabled by no-restricted-syntax
  template-tag-spacing: [error, never]
  unicode-bom: [error, never]
  # wrap-regex
  ################
  # ECMAScript 6 #
  ################
  arrow-body-style: [error, as-needed]
  arrow-parens: [error, always]
  arrow-spacing:
    - error
    - before: true
      after: true
  constructor-super: [error, always]
  generator-star-spacing: [error, ]
  
    
    
  